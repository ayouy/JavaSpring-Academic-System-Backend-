<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mw.education.dao.TeacherCourseMapper">

  <resultMap id="TeacherCourseAndCourseResultMap" type="com.mw.education.domain.joined_entity.TeacherCourseAndCourse">
    <association property="teacherAndCollege.teacher" columnPrefix="teacher_" javaType="com.mw.education.domain.compose.Teacher">
      <id column="teacher_id" property="id"/>
      <result column="teacher_name" property="name"/>
      <result column="teacher_password" property="password"/>
      <result column="teacher_code" property="code"/>
      <result column="teacher_college_id" property="collegeId"/>
      <result column="teacher_remark" property="remark"/>
    </association>
    <association property="teacherAndCollege.college" columnPrefix="college_" javaType="com.mw.education.domain.compose.College">
      <id column="college_id" property="id"/>
      <result column="college_name" property="name"/>
      <result column="college_remark" property="remark"/>
    </association>
    <association property="course" columnPrefix="course_" javaType="com.mw.education.domain.compose.Course">
      <id column="course_id" property="id"/>
      <result column="course_name" property="name"/>
      <result column="course_code" property="code"/>
      <result column="course_term_id" property="termId"/>
      <result column="course_credit" property="credit"/>
    </association>
    <association property="term" columnPrefix="term_" javaType="com.mw.education.domain.compose.Term">
      <id column="term_id" property="id"/>
      <result column="term_name" property="name"/>
      <result column="term_start_date" property="startDate"/>
      <result column="term_end_date" property="endDate"/>
    </association>
  </resultMap>

  <resultMap id="BaseResultMap" type="com.mw.education.domain.compose.TeacherCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="teacher_id" jdbcType="INTEGER" property="teacherId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
  </resultMap>

  <select id="getPrimaryKeyByTeacherCodeAndCourseId" resultType="java.lang.Integer">
    select id from teacher_course
    where teacher_id = ( SELECT t.id FROM teacher t where t.code =#{param1,jdbcType=VARCHAR}) and course_id = #{param2,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher_course
    where  id=#{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.mw.education.domain.compose.TeacherCourse">
    insert into teacher_course (id, teacher_id, course_id
      )
    values (#{id,jdbcType=INTEGER}, #{teacherId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective"  keyColumn="id" keyProperty="id" parameterType="com.mw.education.domain.compose.TeacherCourse" useGeneratedKeys="true">
    insert into teacher_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="teacherId!= null">
        teacher_id,
      </if>
      <if test="courseId!= null">
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.mw.education.domain.compose.TeacherCourse">
    update teacher_course
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mw.education.domain.compose.TeacherCourse">
    update teacher_course
    set teacher_id = #{teacherId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKeyAndForeignKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'false' as QUERYID,id, teacher_id, course_id
    from teacher_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, teacher_id, course_id
    from teacher_course
  </select>
  <select id="getAllTeacherCourseAndCourse" resultMap="TeacherCourseAndCourseResultMap">
    SELECT t.id AS "teacher_teacher_id", t.name AS "teacher_teacher_name", t.password AS "teacher_teacher_password",
           t.code AS "teacher_teacher_code", t.college_id AS "teacher_teacher_college_id", t.remark AS "teacher_teacher_remark",
           c.id AS "college_college_id", c.name AS "college_college_name", c.remark AS "college_college_remark",
           co.id AS "course_course_id", co.name AS "course_course_name", co.code AS "course_course_code",
           co.term_id AS "course_course_term_id", co.credit AS "course_course_credit"
    FROM teacher_course tc
           JOIN teacher t ON t.id = tc.teacher_id
           JOIN college c ON t.college_id = c.id
           JOIN course co ON co.id = tc.course_id
  </select>

  <select id="getTeacherCourseAndCourseByTeacherCourseId" parameterType="java.lang.Integer" resultMap="TeacherCourseAndCourseResultMap">
    SELECT t.id AS "teacher_teacher_id", t.name AS "teacher_teacher_name", t.password AS "teacher_teacher_password",
           t.code AS "teacher_teacher_code", t.college_id AS "teacher_teacher_college_id", t.remark AS "teacher_teacher_remark",
           c.id AS "college_college_id", c.name AS "college_college_name", c.remark AS "college_college_remark",
           co.id AS "course_course_id", co.name AS "course_course_name", co.code AS "course_course_code",
           co.term_id AS "course_course_term_id", co.credit AS "course_course_credit"
    FROM teacher_course tc
      JOIN teacher t ON t.id = tc.teacher_id
      JOIN college c ON t.college_id = c.id
      JOIN course co ON co.id = tc.course_id
    WHERE tc.id = #{id,jdbcType=INTEGER}
  </select>

  <select id="getTeacherCourseAndCourseByTeacherCode" parameterType="java.lang.String" resultMap="TeacherCourseAndCourseResultMap">
    SELECT t.id AS "teacher_teacher_id", t.name AS "teacher_teacher_name", t.password AS "teacher_teacher_password",
    t.code AS "teacher_teacher_code", t.college_id AS "teacher_teacher_college_id", t.remark AS "teacher_teacher_remark",
    c.id AS "college_college_id", c.name AS "college_college_name", c.remark AS "college_college_remark",
    co.id AS "course_course_id", co.name AS "course_course_name", co.code AS "course_course_code",
    co.term_id AS "course_course_term_id", co.credit AS "course_course_credit",
    tm.id AS "term_term_id", tm.name AS "term_term_name", tm.start_date AS "term_term_start_date", tm.end_date AS "term_term_end_date"
    FROM teacher_course tc
      JOIN teacher t ON t.id = tc.teacher_id AND t.code = #{code,jdbcType=VARCHAR}
      JOIN college c ON t.college_id = c.id
      JOIN course co ON co.id = tc.course_id
    JOIN term  tm ON tm.id = co.term_id
    WHERE tc.teacher_id = t.id
    order by co.id ASC
  </select>
</mapper>