<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mw.education.dao.TeacherMapper">
  <resultMap id="ExtendResultMap1" type="com.mw.education.domain.joined_entity.TeacherAndCollege">
    <id column="id" jdbcType="INTEGER" property="teacher.id" />
    <result column="name" jdbcType="VARCHAR" property="teacher.name" />
    <result column="password" jdbcType="VARCHAR" property="teacher.password" />
    <result column="code" jdbcType="VARCHAR" property="teacher.code" />
    <result column="college_id" jdbcType="INTEGER" property="teacher.collegeId" />
    <result column="remark" jdbcType="VARCHAR" property="teacher.remark" />

    <result column="college_name" jdbcType="VARCHAR" property="college.name" />
    <result column="college_remark" jdbcType="VARCHAR" property="college.remark" />
    <result column="college_id" jdbcType="INTEGER" property="college.id" />
  </resultMap>

  <resultMap id="TeacherResultMap" type="com.mw.education.domain.compose.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <sql id="Base_Column_List">
    id, name, password, code, college_id, remark
  </sql>
  <select id="getTeacherAndCollegeByTeacherId" parameterType="java.lang.Integer" resultMap="ExtendResultMap1">
    select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
           college_id as college_id,college.name as college_name,college.remark as college_remark
    from teacher left join college on teacher.college_id=college.id
    where teacher.id = #{id,jdbcType=INTEGER}
  </select>

  <select id ="getAllTeacherAndCollege" resultMap="ExtendResultMap1">
    select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
           college_id as college_id,college.name as college_name,college.remark as college_remark
    from teacher join college on teacher.college_id=college.id
  </select>

  <select id="getTeacherAndCollegeByCollegeId" parameterType="java.lang.Integer" resultMap="ExtendResultMap1">
          select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
                 college_id as college_id,college.name as college_name,college.remark as college_remark
          from teacher join college on teacher.college_id=college.id
          where college.id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.mw.education.domain.compose.Teacher" useGeneratedKeys="true">
    insert into teacher (`name`, password, code, college_id, remark)
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
    #{collegeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.mw.education.domain.compose.Teacher" useGeneratedKeys="true">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mw.education.domain.compose.Teacher">
    update teacher
    set name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        code = #{code,jdbcType=VARCHAR},
        college_id = #{collegeId,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.mw.education.domain.compose.Teacher">
    update teacher
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="TeacherResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="TeacherResultMap">
    select id, name, password, code, college_id, remark
    from teacher
  </select>
</mapper>