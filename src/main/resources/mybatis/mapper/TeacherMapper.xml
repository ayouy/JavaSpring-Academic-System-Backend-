<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mw.education.dao.TeacherMapper">
  <resultMap id="ExtendResultMap1" type="com.mw.education.domain.joined_entity.TeacherAndCollege">
    <id column="id" jdbcType="INTEGER" property="teacher.id" />
    <result column="name" jdbcType="VARCHAR" property="teacher.name" />
    <result column="password" jdbcType="VARCHAR" property="teacher.password" />
    <result column="code" jdbcType="VARCHAR" property="teacher.code" />
    <result column="college_id" jdbcType="INTEGER" property="teacher.collegeId" />
    <result column="remark" jdbcType="VARCHAR" property="teacher.remark" />

    <result column="college_name" jdbcType="VARCHAR" property="college.name" />
    <result column="college_remark" jdbcType="VARCHAR" property="college.remark" />
    <result column="college_id" jdbcType="INTEGER" property="college.id" />
  </resultMap>

  <resultMap id="TeacherResultMap" type="com.mw.education.domain.compose.Teacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>

  <resultMap id="TeacheAndCollegeResultMap" type="com.mw.education.domain.joined_entity.TeacherAndCollege">
    <association property="teacher" columnPrefix="teacher_" javaType="com.mw.education.domain.compose.Teacher">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="code" jdbcType="VARCHAR" property="code" />
      <result column="college_id" jdbcType="INTEGER" property="collegeId" />
    </association>
    <association property="college" columnPrefix="college_" javaType="com.mw.education.domain.compose.College">
      <result column="name" jdbcType="VARCHAR" property="name" />
    </association>
  </resultMap>

  <sql id="Base_Column_List">
    id, name, password, code, college_id, remark
  </sql>
  <select id="getTeacherAndCollegeByTeacherCode" parameterType="java.lang.String" resultMap="ExtendResultMap1">
    select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
           college_id as college_id,college.name as college_name,college.remark as college_remark
    from teacher left join college on teacher.college_id=college.id
    where teacher.code = #{code,jdbcType=VARCHAR}
  </select>

  <select id="getAllTeacherAndCollegeByTeacherCode" parameterType="java.lang.String" resultMap="ExtendResultMap1">
    select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
           college_id as college_id,college.name as college_name,college.remark as college_remark
    from college join teacher on college.id=teacher.college_id
    where teacher.college_id=(
      select college_id from teacher where code = #{code,jdbcType=VARCHAR}
      )
  </select>

  <select id ="getAllTeacherAndCollege" resultMap="ExtendResultMap1">
    select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
           college_id as college_id,college.name as college_name,college.remark as college_remark
    from teacher join college on teacher.college_id=college.id
    order by teacher.id ASC
  </select>

  <select id="getTeacherAndCollegeByCollegeId" parameterType="java.lang.Integer" resultMap="ExtendResultMap1">
          select 'false' as QUERYID, teacher.id,teacher.name,teacher.password,teacher.code,teacher.remark,
                 college_id as college_id,college.name as college_name,college.remark as college_remark
          from teacher join college on teacher.college_id=college.id
          where college.id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.mw.education.domain.compose.Teacher" useGeneratedKeys="true">
    insert into teacher (`name`, password, code, college_id, remark)
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
    #{collegeId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>

  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.mw.education.domain.compose.Teacher" useGeneratedKeys="true">
    insert into teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="collegeId != null">
        college_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.mw.education.domain.compose.Teacher">
    update teacher
    set name = #{name,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        code = #{code,jdbcType=VARCHAR},
        college_id = #{collegeId,jdbcType=INTEGER},
        remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.mw.education.domain.compose.Teacher">
    update teacher
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="collegeId != null">
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="TeacherResultMap">
    select
    <include refid="Base_Column_List" />
    from teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="TeacherResultMap">
    select id, name, password, code, college_id, remark
    from teacher
  </select>
  <resultMap id="SpecialityAndClassGroupAndStudentsResultMap" type="com.mw.education.domain.joined_entity.SpecialityAndClassStudents">
    <association property="speciality"  columnPrefix="speciality_" javaType="com.mw.education.domain.compose.Speciality">
      <id column="id" jdbcType="INTEGER" property="id" />
      <result column="name" jdbcType="VARCHAR" property="name" />
      <result column="grade" jdbcType="VARCHAR" property="grade" />
      <result column="code" jdbcType="VARCHAR" property="code" />
      <result column="college_id" jdbcType="INTEGER" property="collegeId" />
      <result column="remark" jdbcType="VARCHAR" property="remark" />
    </association>
    <collection property="classStudentsList"  ofType="com.mw.education.domain.joined_entity.ClassStudents">
      <association property="classGroup" columnPrefix="class_" javaType="com.mw.education.domain.compose.ClassGroup">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="speciality_id" jdbcType="INTEGER" property="specialityId" />
      </association>
      <collection property="students" columnPrefix="student_" ofType="com.mw.education.domain.compose.Student">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="name" jdbcType="VARCHAR" property="name" />
        <result column="code" jdbcType="VARCHAR" property="code" />
        <result column="class_id" jdbcType="INTEGER" property="classId"/>
        <result column="remark" jdbcType="VARCHAR" property="remark" />
      </collection>
    </collection>
  </resultMap>

    <select id="getAllSpecialityAndClassGroupAndStudents"  parameterType="java.lang.String" resultMap="SpecialityAndClassGroupAndStudentsResultMap">
      select
      s.id as "speciality_id", s.name as "speciality_name", s.grade as "speciality_grade", s.code as "speciality_code",
      s.college_id as "speciality_college_id", s.remark as "speciality_remark",
      c.id as "class_id", c.name as "class_name", c.code as "class_code",
      c.remark as "class_remark",c.speciality_id as "class_speciality_id",
      stu.id as "student_id", stu.name as "student_name",
      stu.code as "student_code", stu.remark as "student_remark",
      stu.class_id as "student_class_id"
      from speciality s
      left join class c on c.speciality_id = s.id
      left join student stu on stu.class_id = c.id
      where s.college_id = (
      SELECT college_id FROM teacher WHERE code = #{code,jdbcType=VARCHAR}
      )
      order by s.id, c.id, stu.id
    </select>

  <select id="getPrimaryKey" parameterType="java.lang.String" resultType="java.lang.Integer">
    select id from teacher where code = #{code,jdbcType=VARCHAR}
  </select>
  
  <select id="selectAllByCollegeId" parameterType="java.lang.Integer" resultMap="TeacherResultMap">
    select id, name, password, code, college_id, remark
    from teacher
    where college_id = #{collegeId,jdbcType=INTEGER}
  </select>
</mapper>